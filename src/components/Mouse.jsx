/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 mouse.glb --transform
*/

import React, { useRef } from 'react'
import { Trail, useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';

export function Mouse(props) {
  const { nodes, materials } = useGLTF('/mouse-transformed.glb');
  const { viewport } = useThree()

  const ref = useRef()
  useFrame(({mouse}) => {
    const x = (mouse.x * viewport.width) / 2
    const y = (mouse.y * viewport.height) / 2
    ref.current.position.set(x, y, 0)
    ref.current.rotation.set(y, 0, 0)
  });
  return (
        // <Trail
        //   width={0.8} // Width of the line
        //   color={'#4348f0'} // Color of the line
        //   length={1} // Length of the line
        //   decay={1} // How fast the line fades away
        //   local={false} // Wether to use the target's world or local positions
        //   stride={0} // Min distance between previous and current point
        //   interval={1} // Number of frames to wait before next calculation
        //   target={undefined} // Optional target. This object will produce the trail.
        //   attenuation={(width) => width} // A function to define the width in each point along it.
        // >

            <group ref={ref} scale={0.5} {...props} dispose={null}>
              <mesh geometry={nodes.Subdivision_Surface_remesh.geometry} material={materials.Mat} position={[-0.165, 0.157, 0]} rotation={[Math.PI / 2, 0.825, 0]} scale={0.01} />
            </group>
        // </Trail>
  )
}

useGLTF.preload('/mouse-transformed.glb')
